name: Deploy NodeJS

on:
  push:
    branches:
    - master


jobs:
  deploy-dev:
    name: Deploy (dev)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Setup env
      uses: allenevans/set-env@v1.0.0
      with:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
        TERRAFORM_WORKSPACE: development

    ##
    # Setup NodeJS
    ##
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Cache dependencies
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Dependencies
      run: npm ci

    ##
    # Run tests
    ##
    - name: Lint code
      run: npm run lint

    ##
    # Setup Terraform
    ##
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform init
      run: terraform init
      working-directory: terraform

    - name: Terraform Select Workspace
      run: terraform workspace select $TERRAFORM_WORKSPACE
      working-directory: terraform
    
    ##
    # Output config from Terraform
    ##
    - name: Output Nuxt config
      run: terraform output nuxt -no-color > ../.env
      working-directory: terraform

    - name: Output Deploy config
      run: terraform output nuxt_deploy -no-color > ../deploy.json
      working-directory: terraform

    - run: cat deploy.json .env

    ##
    # Deploy to S3
    ##
    - name: Build Nuxt
      run: npm run build

    - name: Deploy
      run: node deploy.js ${{ github.sha }}